<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <title>Admin Dashboard</title>
  <link rel="stylesheet" href="/css/admin/admin.css" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    /* Container styles matching category page */
    .dashboard-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 20px;
      animation: fadeInUp 0.6s ease-out;
      background-color: #ffffff;
    }

    /* Header styles matching category page */
    .header {
      text-align: center;
      margin-bottom: 30px;
      padding: 20px 0;
      border-bottom: 2px solid #3498db;
    }

    .header h1 {
      color: #2c3e50;
      font-size: 2.5rem;
      margin-bottom: 10px;
      font-weight: 700;
    }

    .header p {
      color: #7f8c8d;
      font-size: 1.1rem;
    }

    /* Stats Cards */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }

    .stat-card {
      background: linear-gradient(135deg, #3498db, #2980b9);
      color: #ffffff;
      padding: 25px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      text-align: center;
      transition: all 0.3s;
    }

    .stat-card:hover {
      box-shadow: 0 5px 20px rgba(0,0,0,0.15);
      transform: translateX(5px);
    }

    .stat-card.revenue {
      background: linear-gradient(135deg, #27ae60, #229954);
      box-shadow: 0 2px 10px rgba(39, 174, 96, 0.3);
    }

    .stat-card.orders {
      background: linear-gradient(135deg, #e74c3c, #c0392b);
      box-shadow: 0 2px 10px rgba(231, 76, 60, 0.3);
    }

    .stat-card.customers {
      background: linear-gradient(135deg, #f39c12, #e67e22);
      box-shadow: 0 2px 10px rgba(243, 156, 18, 0.3);
    }

    .stat-value {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 5px;
    }

    .stat-label {
      font-size: 1rem;
      opacity: 0.9;
    }

    /* Filter Controls */
    .controls {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
      padding: 20px;
      background: #ffffff;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .filter-group {
      display: flex;
      gap: 15px;
      align-items: center;
    }

    .filter-group label {
      font-weight: 600;
      color: #2c3e50;
    }

    .filter-select {
      padding: 8px 15px;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 14px;
      color: #2c3e50;
      background: #ffffff;
      cursor: pointer;
    }

    .filter-select:focus {
      outline: none;
      border-color: #3498db;
      box-shadow: 0 0 5px rgba(52, 152, 219, 0.3);
    }

    /* Button styles matching category page */
    .btn {
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-weight: 500;
      transition: all 0.3s;
      text-decoration: none;
      display: inline-block;
      text-align: center;
    }

    .btn-primary {
      background-color: #3498db;
      color: #ffffff;
    }

    .btn-primary:hover {
      background-color: #2980b9;
    }

    /* Chart Container */
    .chart-section {
      margin-bottom: 40px;
    }

    .chart-container {
      background: #ffffff;
      padding: 25px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }

    .chart-container:hover {
      box-shadow: 0 5px 20px rgba(0,0,0,0.15);
      transition: box-shadow 0.3s ease;
    }

    .chart-title {
      font-size: 1.4rem;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 20px;
      text-align: center;
      border-bottom: 2px solid #3498db;
      padding-bottom: 10px;
    }

    .chart-wrapper {
      position: relative;
      height: 400px;
    }

    /* Best Selling Sections */
    .bestsellers-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
      gap: 20px;
    }

    .bestseller-section {
      background: #ffffff;
      padding: 25px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .bestseller-section:hover {
      box-shadow: 0 5px 20px rgba(0,0,0,0.15);
      transition: box-shadow 0.3s ease;
    }

    .section-title {
      font-size: 1.3rem;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 20px;
      padding-bottom: 10px;
      border-bottom: 2px solid #3498db;
    }

    .bestseller-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .bestseller-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 0;
      border-bottom: 1px solid #ecf0f1;
    }

    .bestseller-item:hover {
      background-color: #f8f9fa;
      transform: translateX(5px);
      transition: all 0.3s ease;
    }

    .bestseller-item:last-child {
      border-bottom: none;
    }

    .item-info {
      flex: 1;
    }

    .item-name {
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 5px;
    }

    .item-details {
      font-size: 0.9rem;
      color: #7f8c8d;
    }

    .item-stats {
      text-align: right;
      min-width: 100px;
    }

    .stat-primary {
      font-weight: 700;
      font-size: 1.1rem;
      color: #3498db;
    }

    .stat-secondary {
      font-size: 0.9rem;
      color: #7f8c8d;
    }

    .rank-badge {
      background: linear-gradient(135deg, #3498db, #2980b9);
      color: #ffffff;
      width: 30px;
      height: 30px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 700;
      margin-right: 15px;
    }

    .rank-badge.gold {
      background: linear-gradient(135deg, #f1c40f, #f39c12);
    }

    .rank-badge.silver {
      background: linear-gradient(135deg, #95a5a6, #7f8c8d);
    }

    .rank-badge.bronze {
      background: linear-gradient(135deg, #d35400, #e67e22);
    }

    /* Animations matching category page */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes slideInRight {
      from {
        opacity: 0;
        transform: translateX(30px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    /* Custom scrollbar matching category page */
    .bestseller-section {
      max-height: 600px;
      overflow-y: auto;
    }

    .bestseller-section::-webkit-scrollbar {
      width: 6px;
    }

    .bestseller-section::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 3px;
    }

    .bestseller-section::-webkit-scrollbar-thumb {
      background: #3498db;
      border-radius: 3px;
    }

    .bestseller-section::-webkit-scrollbar-thumb:hover {
      background: #2980b9;
    }

    /* Responsive Design matching category page */
    @media (max-width: 768px) {
      .controls {
        flex-direction: column;
        gap: 15px;
      }

      .filter-group {
        justify-content: center;
      }

      .bestsellers-grid {
        grid-template-columns: 1fr;
      }

      .bestseller-item {
        flex-direction: column;
        text-align: center;
        gap: 10px;
      }

      .item-stats {
        text-align: center;
      }
    }

    @media (max-width: 1200px) {
      .bestsellers-grid {
        grid-template-columns: 1fr 1fr;
      }
    }

    @media (max-width: 900px) {
      .stats-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }

    @media (max-width: 600px) {
      .stats-grid {
        grid-template-columns: 1fr;
      }

      .header h1 {
        font-size: 2rem;
      }

      .chart-wrapper {
        height: 300px;
      }
    }

    /* Dark mode support matching category page */
    @media (prefers-color-scheme: dark) {
      .dashboard-container {
        background-color: #ffffff;
        color: #ffffff;
      }

      .chart-container,
      .bestseller-section,
      .controls {
        background-color: #fffdfd;
        color: #ffffff;
      }

      .filter-select {
        background-color: #524c4c;
        color: #ffffff;
        border-color: #555;
      }

      .bestseller-item:hover {
        background-color: #e7dada;
      }
    }

    /* Print styles matching category page */
    @media print {
      .controls {
        display: none;
      }

      .chart-container {
        page-break-inside: avoid;
      }

      .bestsellers-grid {
        grid-template-columns: 1fr;
      }

      .bestseller-section {
        page-break-inside: avoid;
        margin-bottom: 20px;
      }
    }

    /* Loading Spinner */
    .loading {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 200px;
    }

    .spinner {
      border: 4px solid #f3f3f3;
      border-top: 4px solid #3498db;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Loading overlay */
    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(255, 255, 255, 0.5); /* Matches category modal overlay */
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    .loading-spinner {
      width: 50px;
      height: 50px;
      border: 5px solid #f3f3f3;
      border-top: 5px solid #3498db;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  </style>
</head>
<body>
  <%- include('../partials/admin/header') %>

  <div class="dashboard-container">
    <div class="header">
      <h1>ADMIN DASHBOARD</h1>
      <p>Monitor your business performance and insights</p>
    </div>

    <!-- Stats Cards -->
    <div class="stats-grid">
      <div class="stat-card revenue">
        <div class="stat-value">₹<%= (stats.totalRevune || 0).toLocaleString() %></div>
        <div class="stat-label">Total Revenue</div>
      </div>
     
      <div class="stat-card orders">
        <div class="stat-value"><%= stats.totalOrders %></div>
        <div class="stat-label">Total Per Order(individual)</div>
      </div>
      <div class="stat-card customers">
        <div class="stat-value"><%= stats.totalCustomers %></div>
        <div class="stat-label">Total Customers</div>
      </div>
      <div class="stat-card">
        <div class="stat-value"><%= stats.totalRefundAmount %></div>
        <div class="stat-label">Total RefundedAmount</div>
      </div>

      <!-- <div class="stat-card orders">
        <div class="stat-value"><%= stats.totalCancelAmount %></div>
        <div class="stat-label">Total Cancelled Amount</div>
      </div> -->

    </div>



       <div class="stats-grid">
      <div class="stat-card revenue">
        <div class="stat-value">₹<%= stats.finalRevune %></div>
        <div class="stat-label">Final Revenue</div>
      </div>
     
      <div class="stat-card orders">
        <div class="stat-value"><%= stats.totalCouponDiscount %></div>
        <div class="stat-label">Total CouponDisocunt</div>
      </div>
     
      <!-- <div class="stat-card">
        <div class="stat-value"><%= stats.totalRefundAmount %></div>
        <div class="stat-label">Total RefundedAmount</div>
      </div> -->

    </div>



    <!-- Filter Controls -->
    <div class="controls">
      <div class="filter-group">
        <label for="chartFilter">Chart Period:</label>
        <select id="chartFilter" class="filter-select">
          <option value="yearly" <%= filter === 'yearly' ? 'selected' : '' %>>Yearly</option>
          <option value="monthly" <%= filter === 'monthly' ? 'selected' : '' %>>Monthly</option>
          <option value="weekly" <%= filter === 'weekly' ? 'selected' : '' %>>Weekly</option>
          <option value="daily" <%= filter === 'daily' ? 'selected' : '' %>>Daily</option>
        </select>
      </div>
      <button class="btn btn-primary" onclick="refreshData()">
        🔄 Refresh Data
      </button>
    </div>

    <!-- Revenue Chart -->
    <div class="chart-section">
      <div class="chart-container">
        <h3 class="chart-title">Revenue Analytics</h3>
        <div class="chart-wrapper">
          <canvas id="revenueChart"></canvas>
        </div>
      </div>
    </div>

    <!-- Best Selling Sections -->
    <div class="bestsellers-grid">
      <!-- Best Selling Products -->
      <div class="bestseller-section">
        <h3 class="section-title">🏆 Top 10 Products</h3>
        <ul class="bestseller-list">
          <% bestProducts.forEach((product, index) => { %>
            <li class="bestseller-item">
              <div class="rank-badge <%= index === 0 ? 'gold' : index === 1 ? 'silver' : index === 2 ? 'bronze' : '' %>">
                <%= index + 1 %>
              </div>
              <div class="item-info">
                <div class="item-name"><%= product.productName %></div>
                <div class="item-details">Brand: <%= product.brandName || 'N/A' %></div>
              </div>
              <div class="item-stats">
                <div class="stat-primary"><%= product.totalSold %> sold</div>
                <div class="stat-secondary">₹<%= product.totalRevenue.toLocaleString() %></div>
              </div>
            </li>
          <% }) %>
        </ul>
      </div>

      <!-- Best Selling Categories -->
      <div class="bestseller-section">
        <h3 class="section-title">📂 Top 10 Categories</h3>
        <ul class="bestseller-list">
          <% bestCategories.forEach((category, index) => { %>
            <li class="bestseller-item">
              <div class="rank-badge <%= index === 0 ? 'gold' : index === 1 ? 'silver' : index === 2 ? 'bronze' : '' %>">
                <%= index + 1 %>
              </div>
              <div class="item-info">
                <div class="item-name"><%= category.categoryName %></div>
                <div class="item-details"><%= category.productCount %> products</div>
              </div>
              <div class="item-stats">
                <div class="stat-primary"><%= category.totalSold %> sold</div>
                <div class="stat-secondary">₹<%= category.totalRevenue.toLocaleString() %></div>
              </div>
            </li>
          <% }) %>
        </ul>
      </div>

      <!-- Best Selling Brands -->
      <div class="bestseller-section">
        <h3 class="section-title">🏷️ Top 10 Brands</h3>
        <ul class="bestseller-list">
          <% bestBrands.forEach((brand, index) => { %>
            <li class="bestseller-item">
              <div class="rank-badge <%= index === 0 ? 'gold' : index === 1 ? 'silver' : index === 2 ? 'bronze' : '' %>">
                <%= index + 1 %>
              </div>
              <div class="item-info">
                <div class="item-name"><%= brand.brandName %></div>
                <div class="item-details"><%= brand.productCount %> products</div>
              </div>
              <div class="item-stats">
                <div class="stat-primary"><%= brand.totalSold %> sold</div>
                <div class="stat-secondary">₹<%= brand.totalRevenue.toLocaleString() %></div>
              </div>
            </li>
          <% }) %>
        </ul>
      </div>
    </div>
  </div>

  <script src="/js/admin/adminNav.js"></script>
  <script>
    // Chart.js configuration
    const ctx = document.getElementById('revenueChart').getContext('2d');
    let revenueChart;

    // Chart data from server
    const chartData = <%- JSON.stringify(chartData) %>;
    
    function initChart() {
      if (revenueChart) {
        revenueChart.destroy();
      }

      const gradient = ctx.createLinearGradient(0, 0, 0, 400);
      gradient.addColorStop(0, 'rgba(52, 152, 219, 0.8)');
      gradient.addColorStop(1, 'rgba(52, 152, 219, 0.1)');

      revenueChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: chartData.labels,
          datasets: [{
            label: 'Revenue',
            data: chartData.data,
            backgroundColor: gradient,
            borderColor: '#3498db',
            borderWidth: 3,
            fill: true,
            tension: 0.4,
            pointBackgroundColor: '#3498db',
            pointBorderColor: '#ffffff',
            pointBorderWidth: 2,
            pointRadius: 6,
            pointHoverRadius: 8
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              backgroundColor: 'rgba(44, 62, 80, 0.9)', // Matches category modal
              titleColor: '#ffffff',
              bodyColor: '#ffffff',
              borderColor: '#3498db',
              borderWidth: 1,
              callbacks: {
                label: function(context) {
                  return 'Revenue: ₹' + context.parsed.y.toLocaleString();
                }
              }
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              grid: {
                color: 'rgba(0, 0, 0, 0.1)'
              },
              ticks: {
                callback: function(value) {
                  return '₹' + value.toLocaleString();
                }
              }
            },
            x: {
              grid: {
                color: 'rgba(0, 0, 0, 0.1)'
              }
            }
          },
          interaction: {
            intersect: false,
            mode: 'index'
          }
        }
      });
    }

    // Initialize chart on page load
    document.addEventListener('DOMContentLoaded', initChart);

    // Filter change handler
    document.getElementById('chartFilter').addEventListener('change', function() {
      const filter = this.value;
      window.location.href = `/admin/dashboard?filter=${filter}`;
    });

    // Refresh data function
    function refreshData() {
      const filter = document.getElementById('chartFilter').value;
      
      Swal.fire({
        title: 'Refreshing Data...',
        text: 'Please wait while we update the dashboard',
        allowOutsideClick: false,
        didOpen: () => {
          Swal.showLoading();
        }
      });
      
      setTimeout(() => {
        window.location.href = `/admin/dashboard?filter=${filter}&refresh=true`;
      }, 1000);
    }

    // Show success message if refreshed
    <% if (typeof refresh !== 'undefined' && refresh) { %>
      Swal.fire({
        title: 'Data Refreshed!',
        text: 'Dashboard has been updated with the latest data',
        icon: 'success',
        timer: 2000,
        showConfirmButton: false
      });
    <% } %>

    // Auto-refresh every 5 minutes
    setInterval(() => {
      const filter = document.getElementById('chartFilter').value;
      fetch(`/admin/dashboard/api?filter=${filter}`)
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Update chart data
            revenueChart.data.labels = data.chartData.labels;
            revenueChart.data.datasets[0].data = data.chartData.data;
            revenueChart.update();
            
            console.log('Dashboard data auto-refreshed');
          }
        })
        .catch(error => {
          console.error('Auto-refresh failed:', error);
        });
    }, 300000); // 5 minutes
  </script>
</body>
</html>