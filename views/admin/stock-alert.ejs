<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Stock Alert Management – Admin Dashboard</title>
    <link rel="stylesheet" href="/css/admin/category.css" />
    <link rel="stylesheet" href="/css/admin/admin.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
      .stock-overview {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
      }

      .stock-card {
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        border-left: 4px solid;
        transition: transform 0.2s ease;
      }

      .stock-card:hover {
        transform: translateY(-2px);
      }

      .stock-card.low-stock {
        border-left-color: #e74c3c;
      }

      .stock-card.medium-stock {
        border-left-color: #f39c12;
      }

      .stock-card.high-stock {
        border-left-color: #27ae60;
      }

      .stock-card.out-of-stock {
        border-left-color: #95a5a6;
      }

      .stock-card h3 {
        margin: 0 0 10px 0;
        font-size: 1.2rem;
        color: #2c3e50;
      }

      .stock-number {
        font-size: 2rem;
        font-weight: bold;
        margin: 10px 0;
      }

      .stock-card.low-stock .stock-number {
        color: #e74c3c;
      }

      .stock-card.medium-stock .stock-number {
        color: #f39c12;
      }

      .stock-card.high-stock .stock-number {
        color: #27ae60;
      }

      .stock-card.out-of-stock .stock-number {
        color: #95a5a6;
      }

      .stock-description {
        color: #7f8c8d;
        font-size: 0.9rem;
        margin-bottom: 15px;
      }

      .view-details-btn {
        background: #3498db;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        text-decoration: none;
        display: inline-block;
        font-size: 0.9rem;
        transition: background 0.2s ease;
      }

      .view-details-btn:hover {
        background: #2980b9;
      }

      .stock-level-indicator {
        width: 100%;
        height: 6px;
        background: #ecf0f1;
        border-radius: 3px;
        overflow: hidden;
        margin: 10px 0;
      }

      .stock-level-fill {
        height: 100%;
        transition: width 0.3s ease;
      }

      .stock-level-fill.low {
        background: #e74c3c;
      }

      .stock-level-fill.medium {
        background: #f39c12;
      }

      .stock-level-fill.high {
        background: #27ae60;
      }

      .filter-tabs {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
        flex-wrap: wrap;
      }

      .filter-tab {
        padding: 10px 20px;
        border: 2px solid #bdc3c7;
        background: white;
        color: #2c3e50;
        border-radius: 25px;
        cursor: pointer;
        text-decoration: none;
        transition: all 0.2s ease;
        font-weight: 500;
      }

      .filter-tab.active {
        background: #3498db;
        color: white;
        border-color: #3498db;
      }

      .filter-tab:hover {
        background: #ecf0f1;
        transform: translateY(-1px);
      }

      .filter-tab.active:hover {
        background: #2980b9;
      }

      .table tbody tr.critical-stock {
        background-color: #fdf2f2;
      }

      .table tbody tr.warning-stock {
        background-color: #fef9e7;
      }

      .table tbody tr.out-of-stock {
        background-color: #f8f9fa;
      }

      .stock-status {
        display: inline-block;
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
        text-align: center;
        min-width: 80px;
      }

      .stock-status.critical {
        background: #fee;
        color: #e74c3c;
        border: 1px solid #f8d7da;
      }

      .stock-status.warning {
        background: #fff8dc;
        color: #f39c12;
        border: 1px solid #ffeaa7;
      }

      .stock-status.good {
        background: #f0fff4;
        color: #27ae60;
        border: 1px solid #c3e6cb;
      }

      .stock-status.out {
        background: #f8f9fa;
        color: #6c757d;
        border: 1px solid #dee2e6;
      }

      @media (max-width: 768px) {
        .stock-overview {
          grid-template-columns: 1fr;
        }
        
        .filter-tabs {
          justify-content: center;
        }
      }
    </style>
  </head>
  <body>
    <%- include('../partials/admin/header') %>

    <div class="container">
      <div class="header">
        <h1>STOCK ALERT MANAGEMENT</h1>
        <p>Monitor and manage product stock levels efficiently</p>
      </div>

      <!-- Stock Overview Cards -->
      <div class="stock-overview">
        <% 
          let criticalCount = 0;
          let lowCount = 0;
          let goodCount = 0;
          let outOfStockCount = 0;
          
          if (products && products.length > 0) {
            products.forEach(product => {
              if (product.stock === 0) {
                outOfStockCount++;
              } else if (product.stock < 10) {
                criticalCount++;
              } else if (product.stock < 50) {
                lowCount++;
              } else {
                goodCount++;
              }
            });
          }
          
          const totalProducts = products ? products.length : 0;
          const criticalPercentage = totalProducts > 0 ? (criticalCount / totalProducts) * 100 : 0;
          const lowPercentage = totalProducts > 0 ? (lowCount / totalProducts) * 100 : 0;
          const goodPercentage = totalProducts > 0 ? (goodCount / totalProducts) * 100 : 0;
        %>

        <div class="stock-card critical-stock low-stock">
          <h3>Critical Stock</h3>
          <div class="stock-number"><%= criticalCount %></div>
          <div class="stock-description">Products with less than 10 units</div>
          <div class="stock-level-indicator">
            <div class="stock-level-fill low" style="width: <%= Math.min(criticalPercentage, 100) %>%"></div>
          </div>
          <a href="/admin/stock-alert?filter=critical" class="view-details-btn">View Details</a>
        </div>

        <div class="stock-card warning-stock medium-stock">
          <h3>Low Stock</h3>
          <div class="stock-number"><%= lowCount %></div>
          <div class="stock-description">Products with 10-49 units</div>
          <div class="stock-level-indicator">
            <div class="stock-level-fill medium" style="width: <%= Math.min(lowPercentage, 100) %>%"></div>
          </div>
          <a href="/admin/stock-alert?filter=low" class="view-details-btn">View Details</a>
        </div>

        <div class="stock-card good-stock high-stock">
          <h3>Good Stock</h3>
          <div class="stock-number"><%= goodCount %></div>
          <div class="stock-description">Products with 50+ units</div>
          <div class="stock-level-indicator">
            <div class="stock-level-fill high" style="width: <%= Math.min(goodPercentage, 100) %>%"></div>
          </div>
          <a href="/admin/stock-alert?filter=good" class="view-details-btn">View Details</a>
        </div>

        <div class="stock-card out-of-stock">
          <h3>Out of Stock</h3>
          <div class="stock-number"><%= outOfStockCount %></div>
          <div class="stock-description">Products with 0 units</div>
          <div class="stock-level-indicator">
            <div class="stock-level-fill" style="width: 0%; background: #95a5a6;"></div>
          </div>
          <a href="/admin/stock-alert?filter=out" class="view-details-btn">View Details</a>
        </div>
      </div>

      <!-- Filter Tabs -->
      <div class="filter-tabs">
        <a href="/admin/stock-alert" class="filter-tab <%= (!filter || filter === 'all') ? 'active' : '' %>">All Products</a>
        <a href="/admin/stock-alert?filter=critical" class="filter-tab <%= filter === 'critical' ? 'active' : '' %>">
          Critical Stock <% if (criticalCount > 0) { %>(<%= criticalCount %>)<% } %>
        </a>
        <a href="/admin/stock-alert?filter=low" class="filter-tab <%= filter === 'low' ? 'active' : '' %>">
          Low Stock <% if (lowCount > 0) { %>(<%= lowCount %>)<% } %>
        </a>
        <a href="/admin/stock-alert?filter=good" class="filter-tab <%= filter === 'good' ? 'active' : '' %>">
          Good Stock <% if (goodCount > 0) { %>(<%= goodCount %>)<% } %>
        </a>
        <a href="/admin/stock-alert?filter=out" class="filter-tab <%= filter === 'out' ? 'active' : '' %>">
          Out of Stock <% if (outOfStockCount > 0) { %>(<%= outOfStockCount %>)<% } %>
        </a>
      </div>

      <!-- Controls (search + add) -->
      <div class="controls">
        <form method="GET" action="/admin/stock-alert" class="search-container">
          <input
            type="text"
            id="searchInput"
            class="search-input"
            name="search"
            value="<%= search || '' %>"
            placeholder="Search products by name, category, or brand..."
          />
          <% if (filter) { %>
            <input type="hidden" name="filter" value="<%= filter %>" />
          <% } %>
          <button type="submit" class="btn btn-secondary">Search</button>
          <button
            type="button"
            class="btn btn-secondary"
            onclick="window.location.href='/admin/stock-alert'"
          >
            Reset
          </button>
        </form>

        <a href="/admin/product/add">
          <button class="btn btn-primary"><span>+</span> Add Product</button>
        </a>
      </div>

      <!-- Product Table -->
      <div class="table-container">
        <table class="table" id="stockTable">
          <thead>
            <tr>
              <th>S.NO</th>
              <th>PRODUCT NAME</th>
              <th>CATEGORY</th>
              <th>BRAND</th>
              <th>CURRENT STOCK</th>
              <th>STOCK STATUS</th>
              <th>REGULAR PRICE</th>
              <th>SALE PRICE</th>
              <th>IMAGE</th>
              <th>ACTIONS</th>
            </tr>
          </thead>
          <tbody>
            <% if (!products || products.length === 0) { %>
            <tr>
              <td colspan="10" class="no-data">
                <div>📊</div>
                <h3>No products found</h3>
                <p>
                  <% if (filter) { %>
                    No products found in <%= filter %> stock category
                  <% } else if (search) { %>
                    Try a different search term or reset filters
                  <% } else { %>
                    Add some products to start monitoring stock levels
                  <% } %>
                </p>
              </td>
            </tr>
            <% } else { %>
              <% products.forEach((product, index) => { %>
                <% 
                  let stockClass = '';
                  let stockStatus = '';
                  let stockStatusClass = '';
                  
                  if (product.stock === 0) {
                    stockClass = 'out-of-stock';
                    stockStatus = 'Out of Stock';
                    stockStatusClass = 'out';
                  } else if (product.stock < 10) {
                    stockClass = 'critical-stock';
                    stockStatus = 'Critical';
                    stockStatusClass = 'critical';
                  } else if (product.stock < 50) {
                    stockClass = 'warning-stock';
                    stockStatus = 'Low';
                    stockStatusClass = 'warning';
                  } else {
                    stockStatus = 'Good';
                    stockStatusClass = 'good';
                  }
                %>
                <tr class="<%= stockClass %>" data-stock-level="<%= stockStatusClass %>">
                  <td><%= ((currentPage || 1) - 1) * (limit || 10) + index + 1 %></td>
                  <td><%= product.productName || 'N/A' %></td>
                  <td><%= product.category ? product.category.name : 'N/A' %></td>
                  <td><%= product.brand ? product.brand.brandName : 'N/A' %></td>
                  <td>
                    <strong style="color: 
                      <%= product.stock === 0 ? '#6c757d' : 
                          product.stock < 10 ? '#e74c3c' : 
                          product.stock < 50 ? '#f39c12' : '#27ae60' %>">
                      <%= product.stock != null ? product.stock : 'N/A' %>
                    </strong>
                    <% if (product.stock > 0 && product.stock < 10) { %>
                      <span style="color: #e74c3c; font-size: 0.8rem;"> ⚠️</span>
                    <% } %>
                  </td>
                  <td><span class="stock-status <%= stockStatusClass %>"><%= stockStatus %></span></td>
                  <td>₹<%= product.regularPrice != null ? product.regularPrice.toFixed(2) : 'N/A' %></td>
                  <td>₹<%= product.salePrice != null ? product.salePrice.toFixed(2) : 'N/A' %></td>
                  <td>
                    <% if (product.productImage && product.productImage.length > 0) { %>
                      <img
                        src="/<%= product.productImage[0].path %>"
                        alt="<%= product.productName %>"
                        style="width: 50px; height: 50px; object-fit: cover; border-radius: 4px;"
                        onerror="this.src='/images/no-image-placeholder.jpg'"
                      />
                    <% } else { %>
                      <div style="width: 50px; height: 50px; background: #f8f9fa; border: 1px dashed #dee2e6; display: flex; align-items: center; justify-content: center; border-radius: 4px; font-size: 0.8rem; color: #6c757d;">
                        No Image
                      </div>
                    <% } %>
                  </td>
                  <td>
                    <div class="action-buttons">
                      <a href="/admin/product/edit?id=<%= product._id || '' %>">
                        <button class="btn btn-warning btn-sm" title="Edit Product">Edit</button>
                      </a>
                        <button class="btn btn-success btn-sm" onclick="quickRestock('<%= product._id %>', '<%= product.productName %>', <%= product.stock %>)" title="Quick Restock">
                          Restock
                        </button>
                      <% if (product.stock === 0) { %>
                        <button class="btn btn-danger btn-sm" onclick="markUnavailable('<%= product._id %>')" title="Mark as Unavailable">
                          Mark Unavailable
                        </button>
                      <% } %>
                    </div>
                  </td>
                </tr>
              <% }) %>
            <% } %>
          </tbody>
        </table>
      </div>

      <!-- Pagination -->
      <% if (totalPages && totalPages > 1) { %>
      <div class="pagination">
        <% const pages = totalPages; %>
        <% const current = currentPage || 1; %>
        
        <% if (current > 1) { %>
          <a href="/admin/stock-alert?page=<%= current - 1 %><%= search ? '&search=' + encodeURIComponent(search) : '' %><%= filter ? '&filter=' + filter : '' %>">
            <button>Previous</button>
          </a>
        <% } %>
        
        <% for (let i = Math.max(1, current - 2); i <= Math.min(pages, current + 2); i++) { %>
          <a href="/admin/stock-alert?page=<%= i %><%= search ? '&search=' + encodeURIComponent(search) : '' %><%= filter ? '&filter=' + filter : '' %>">
            <button class="<%= i === current ? 'active' : '' %>">
              <%= i %>
            </button>
          </a>
        <% } %>
        
        <% if (current < pages) { %>
          <a href="/admin/stock-alert?page=<%= current + 1 %><%= search ? '&search=' + encodeURIComponent(search) : '' %><%= filter ? '&filter=' + filter : '' %>">
            <button>Next</button>
          </a>
        <% } %>
      </div>
      <% } %>

      <!-- Stock Summary Footer -->
      <% if (products && products.length > 0) { %>
      <div style="margin-top: 30px; padding: 20px; background: white; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <h3 style="margin-bottom: 15px; color: #2c3e50;">Stock Summary</h3>
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;">
          <div>
            <strong>Total Products:</strong> <%= totalProducts || products.length %>
          </div>
          <div style="color: #e74c3c;">
            <strong>Critical Stock:</strong> <%= criticalCount %> 
            <% if (criticalCount > 0) { %>
              (<%= ((criticalCount / products.length) * 100).toFixed(1) %>%)
            <% } %>
          </div>
          <div style="color: #f39c12;">
            <strong>Low Stock:</strong> <%= lowCount %>
            <% if (lowCount > 0) { %>
              (<%= ((lowCount / products.length) * 100).toFixed(1) %>%)
            <% } %>
          </div>
          <div style="color: #6c757d;">
            <strong>Out of Stock:</strong> <%= outOfStockCount %>
            <% if (outOfStockCount > 0) { %>
              (<%= ((outOfStockCount / products.length) * 100).toFixed(1) %>%)
            <% } %>
          </div>
        </div>
      </div>
      <% } %>
    </div>

    <script src="/js/admin/adminNav.js"></script>

    <script>
      // Quick restock function
      function quickRestock(productId, productName, currentStock) {
        Swal.fire({
          title: `Restock: ${productName}`,
          text: `Current stock: ${currentStock} units. Enter quantity to add:`,
          input: 'number',
          inputAttributes: {
            min: 1,
            step: 1,
            placeholder: 'Enter quantity to add'
          },
          showCancelButton: true,
          confirmButtonText: 'Add Stock',
          confirmButtonColor: '#27ae60',
          cancelButtonColor: '#95a5a6',
          inputValidator: (value) => {
            if (!value || value <= 0) {
              return 'Please enter a valid quantity!'
            }
            if (value > 10000) {
              return 'Quantity seems too high. Please verify.'
            }
          }
        }).then((result) => {
          if (result.isConfirmed) {
           
            fetch('/admin/product/update/stock', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                productId: productId,
                quantity: parseInt(result.value),
                action: 'add'
              })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire({
                  title: 'Stock Updated!',
                  text: `Added ${result.value} units. New stock: ${parseInt(currentStock) + parseInt(result.value)} units`,
                  icon: 'success',
                  timer: 2000,
                  showConfirmButton: false
                }).then(() => {
                  window.location.reload();
                });
              } else {
                Swal.fire('Error!', data.message || 'Failed to update stock', 'error');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              Swal.fire('Error!', 'Failed to update stock. Please try again.', 'error');
            });
          }
        });
      }

      // View stock history
      function viewHistory(productId) {
        window.location.href = `/admin/product/stock-history?id=${productId}`;
      }

      // Mark product as unavailable
      function markUnavailable(productId) {
        Swal.fire({
          title: 'Mark as Unavailable?',
          text: 'This will block the product from being displayed to customers.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, mark unavailable',
          confirmButtonColor: '#e74c3c',
          cancelButtonColor: '#95a5a6'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = `/admin/product/block?id=${productId}`;
          }
        });
      }

      // Enhanced real-time search
      let searchTimeout;
      document.getElementById('searchInput').addEventListener('input', function(e) {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          const searchTerm = e.target.value.toLowerCase();
          const rows = document.querySelectorAll('#stockTable tbody tr');
          
          rows.forEach(row => {
            if (row.querySelector('.no-data')) return; // Skip no-data row
            
            const text = row.textContent.toLowerCase();
            const isVisible = text.includes(searchTerm);
            row.style.display = isVisible ? '' : 'none';
          });
          
          // Update visible count
          const visibleRows = Array.from(rows).filter(row => 
            !row.querySelector('.no-data') && row.style.display !== 'none'
          ).length;
          
          if (visibleRows === 0 && searchTerm) {
            console.log('No products match the search criteria');
          }
        }, 300);
      });

      // Auto-refresh notification for low stock (every 30 seconds)
      let refreshInterval = setInterval(() => {
        const criticalRows = document.querySelectorAll('.critical-stock');
        const outOfStockRows = document.querySelectorAll('.out-of-stock');
        
        if (criticalRows.length > 0 || outOfStockRows.length > 0) {
          console.log(`Stock Alert: ${criticalRows.length} critical, ${outOfStockRows.length} out of stock`);
          
          // You can add a subtle notification here
          if (criticalRows.length > 0) {
            document.title = `(${criticalRows.length}) Stock Alerts - Admin Dashboard`;
          }
        }
      }, 30000);

      // Reset title when page is focused
      window.addEventListener('focus', () => {
        document.title = 'Stock Alert Management – Admin Dashboard';
      });

      // Keyboard shortcuts
      document.addEventListener('keydown', function(e) {
        // Ctrl/Cmd + F to focus search
        if ((e.ctrlKey || e.metaKey) && e.key === 'f') {
          e.preventDefault();
          document.getElementById('searchInput').focus();
        }
        
        // Escape to clear search
        if (e.key === 'Escape') {
          const searchInput = document.getElementById('searchInput');
          if (searchInput.value) {
            searchInput.value = '';
            searchInput.dispatchEvent(new Event('input'));
          }
        }
      });
    </script>
  </body>
</html>