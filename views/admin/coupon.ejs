<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <title>Coupon Management â€“ Admin Dashboard</title>
  <link rel="stylesheet" href="/css/admin/category.css" />
  <link rel="stylesheet" href="/css/admin/admin.css" />
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    /* Enhanced Modal Styles */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.5);
      overflow: auto;
    }
    
    .modal-content {
      background-color: #fefefe;
      margin: 2% auto;
      padding: 25px;
      border: 1px solid #888;
      width: 60%;
      max-width: 600px;
      border-radius: 8px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
      position: relative;
      max-height: 90vh;
      overflow-y: auto;
    }
    
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
      position: absolute;
      top: 10px;
      right: 15px;
    }
    
    .close:hover {
      color: black;
    }
    
    .modal h2 {
      margin-top: 0;
      margin-bottom: 20px;
      font-size: 24px;
      color: #333;
      border-bottom: 1px solid #eee;
      padding-bottom: 10px;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      font-size: 16px;
      color: #555;
    }
    
    .form-group input, .form-group select {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      box-sizing: border-box;
      font-size: 16px;
      transition: border-color 0.3s;
    }
    
    .form-group input:focus, .form-group select:focus {
      border-color: #3498db;
      outline: none;
      box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);
    }
    
    .form-row {
      display: flex;
      gap: 15px;
    }
    
    .form-row .form-group {
      flex: 1;
    }
    
    .error {
      color: #e74c3c;
      font-size: 14px;
      margin-top: 5px;
      display: none;
    }
    
    .coupon-status {
      font-size: 14px;
      font-weight: 500;
      padding: 5px 10px;
      border-radius: 4px;
      text-align: center;
    }
    
    .status-active {
      color: #27ae60;
      background-color: rgba(39, 174, 96, 0.1);
      border: 1px solid #27ae60;
    }
    
    .status-inactive {
      color: #e74c3c;
      background-color: rgba(231, 76, 60, 0.1);
      border: 1px solid #e74c3c;
    }
    
    .status-expired {
      color: #95a5a6;
      background-color: rgba(149, 165, 166, 0.1);
      border: 1px solid #bdc3c7;
    }
    
    .btn-primary {
      background-color: #3498db;
      color: white;
      padding: 12px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
      font-weight: 500;
      width: 100%;
      transition: background-color 0.3s;
    }
    
    .btn-primary:hover {
      background-color: #2980b9;
    }
    
    .action-buttons {
      display: flex;
      flex-wrap: wrap;
      gap: 5px;
    }
    
    .action-buttons .btn {
      padding: 6px 10px;
      font-size: 14px;
    }
    
    .btn-info {
      background-color: #3498db;
      color: white;
    }
    
    .btn-info:hover {
      background-color: #2980b9;
    }
    
    .btn-danger {
      background-color: #e74c3c;
      color: white;
    }
    
    .btn-danger:hover {
      background-color: #c0392b;
    }
    
    .btn-warning {
      background-color: #f39c12;
      color: white;
    }
    
    .btn-warning:hover {
      background-color: #e67e22;
    }
    
    .usage-info {
      font-size: 12px;
      color: #666;
      margin-top: 5px;
    }
  </style>
</head>
<body>

  <%- include('../partials/admin/header') %>

  <div class="container">
    <div class="header">
      <h1>COUPON MANAGEMENT</h1>
      <p>Manage your discount coupons efficiently</p>
    </div>

    <!-- Controls (search + add) -->
    <div class="controls">
      <form method="GET" action="/admin/coupon" class="search-container">
        <input  type="text"
                id="searchInput"
                class="search-input"
                name="search"
                value="<%= search || '' %>"
                placeholder="Search coupons..." />
        <button type="submit" class="btn btn-secondary">Search</button>
        <a href="/admin/coupon">
          <button type="button" class="btn btn-secondary">Reset</button>
        </a>
      </form>

      <button class="btn btn-primary" id="addCouponBtn"><span>+</span> Add Coupon</button>
    </div>

    <!-- Coupon Table -->
    <div class="table-container">
      <table class="table" id="couponTable">
        <thead>
          <tr>
            <th>S.NO</th>
            <th>CODE</th>
            <th>DISCOUNT</th>
            <th>USAGE</th>
            <th>VALIDITY</th>
            <th>STATUS</th>
            <th>ACTIONS</th>
          </tr>
        </thead>
        <tbody>
          <% if (coupons.length === 0) { %>
            <tr>
              <td colspan="7" class="no-data">
                <div>ðŸŽ«</div>
                <h3>No coupons found</h3>
                <p>Try a different search or add a new coupon</p>
              </td>
            </tr>
          <% } else { %>
            <% coupons.forEach((coupon, index) => { %>
              <tr>
                <td><%= (currentPage - 1) * limit + index + 1 %></td>
                <td><strong><%= coupon.code %></strong></td>
                <td>
                  <%= coupon.discountPercent %>%
                  <% if (coupon.maxDiscountAmount) { %>
                    <br><small>Max: â‚¹<%= coupon.maxDiscountAmount %></small>
                  <% } %>
                  <% if (coupon.minPurchaseAmount > 0) { %>
                    <br><small>Min: â‚¹<%= coupon.minPurchaseAmount %></small>
                  <% } %>
                </td>
                <td>
                  <div class="usage-info">
                    Used: <%= coupon.usedCount %>
                    <% if (coupon.totalUsageLimit) { %>
                      / <%= coupon.totalUsageLimit %>
                    <% } else { %>
                      / âˆž
                    <% } %>
                    <br>
                    <small>Per User: <%= coupon.usageLimitPerUser %></small>
                  </div>
                </td>
                <td>
                  <small>Expires: <%= new Date(coupon.expiresAt).toLocaleDateString() %></small>
                  <br>
                  <small>For: <%= coupon.onlyFor %></small>
                </td>
                <td>
                  <% 
                    let statusClass = 'status-active';
                    let statusText = 'Active';
                    if (!coupon.isActive) {
                      statusClass = 'status-inactive';
                      statusText = 'Inactive';
                    } else if (new Date(coupon.expiresAt) < new Date()) {
                      statusClass = 'status-expired';
                      statusText = 'Expired';
                    }
                  %>
                  <div class="coupon-status <%= statusClass %>">
                    <%= statusText %>
                  </div>
                </td>
                <td>
                  <div class="action-buttons">
                    <a href="/admin/coupon/edit?id=<%= coupon._id %>">
                      <button class="btn btn-warning btn-sm">Edit</button>
                    </a>
                    <% if (coupon.isActive) { %>
                      <button class="btn btn-danger btn-sm deactivate-btn" data-id="<%= coupon._id %>">Deactivate</button>
                    <% } else { %>
                      <button class="btn btn-success btn-sm activate-btn" data-id="<%= coupon._id %>">Activate</button>
                    <% } %>
                    <button class="btn btn-danger btn-sm delete-btn" data-id="<%= coupon._id %>">Delete</button>
                  </div>
                </td>
              </tr>
            <% }) %>
          <% } %>
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    <div class="pagination">
      <% for (let i = 1; i <= totalPages; i++) { %>
        <a href="/admin/coupon?page=<%= i %>&search=<%= search || '' %>">
          <button class="<%= i === currentPage ? 'active' : '' %>"><%= i %></button>
        </a>
      <% } %>
    </div>
  </div>

  <!-- Add Coupon Modal -->
  <div id="couponModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2>Add New Coupon</h2>
      <form id="couponForm">
        <div class="form-group">
          <label for="code">Coupon Code *</label>
          <input type="text" id="code" name="code" required style="text-transform: uppercase;">
          <div id="codeError" class="error">Coupon code is required</div>
        </div>
        
        <div class="form-row">
          <div class="form-group">
            <label for="discountPercent">Discount Percentage (%) *</label>
            <input type="number" id="discountPercent" name="discountPercent" min="1" max="100" required>
            <div id="discountError" class="error">Discount must be between 1 and 100</div>
          </div>
          <div class="form-group">
            <label for="maxDiscountAmount">Max Discount Amount (â‚¹)</label>
            <input type="number" id="maxDiscountAmount" name="maxDiscountAmount" min="0">
          </div>
        </div>
        
        <div class="form-row">
          <div class="form-group">
            <label for="minPurchaseAmount">Min Purchase Amount (â‚¹)</label>
            <input type="number" id="minPurchaseAmount" name="minPurchaseAmount" min="0" value="0">
          </div>
          <div class="form-group">
            <label for="expiresAt">Expiry Date *</label>
            <input type="date" id="expiresAt" name="expiresAt" required>
            <div id="expiryError" class="error">Expiry date cannot be in the past</div>
          </div>
        </div>
        
        <div class="form-row">
          <div class="form-group">
            <label for="onlyFor">Available For</label>
            <select id="onlyFor" name="onlyFor">
              <option value="all">All Users</option>
              <option value="newUsers">New Users Only</option>
              <option value="vipUsers">VIP Users Only</option>
            </select>
          </div>
          <div class="form-group">
            <label for="usageLimitPerUser">Usage Limit Per User</label>
            <input type="number" id="usageLimitPerUser" name="usageLimitPerUser" min="1" value="1">
          </div>
        </div>
        
        <div class="form-group">
          <label for="totalUsageLimit">Total Usage Limit (Optional)</label>
          <input type="number" id="totalUsageLimit" name="totalUsageLimit" min="1">
        </div>
        
        <button type="submit" class="btn btn-primary">Add Coupon</button>
      </form>
    </div>
  </div>

  <script src="/js/admin/adminNav.js"></script>
  <script>
    // Modal handling
    const modal = document.getElementById('couponModal');
    const addBtn = document.getElementById('addCouponBtn');
    const closeBtn = document.querySelector('.close');
    const couponForm = document.getElementById('couponForm');
    
    addBtn.addEventListener('click', function() {
      modal.style.display = 'block';
      // Set minimum date to today
      const today = new Date().toISOString().split('T')[0];
      document.getElementById('expiresAt').min = today;
    });
    
    closeBtn.addEventListener('click', function() {
      modal.style.display = 'none';
    });
    
    window.addEventListener('click', function(event) {
      if (event.target === modal) {
        modal.style.display = 'none';
      }
    });
    
    // Form validation
    document.getElementById('expiresAt').addEventListener('change', function() {
      const selectedDate = new Date(this.value);
      const today = new Date();
      today.setHours(0, 0, 0, 0);
      
      if (selectedDate < today) {
        showError(document.getElementById('expiryError'), "Expiry date cannot be in the past");
      } else {
        hideError(document.getElementById('expiryError'));
      }
    });
    
    document.getElementById('discountPercent').addEventListener('input', function() {
      const value = parseInt(this.value);
      if (isNaN(value) || value < 1 || value > 100) {
        showError(document.getElementById('discountError'), "Discount must be between 1 and 100");
      } else {
        hideError(document.getElementById('discountError'));
      }
    });
    
    // Helper functions
    function showError(element, message) {
      if (element) {
        element.textContent = message;
        element.style.display = 'block';
      }
    }
    
    function hideError(element) {
      if (element) {
        element.style.display = 'none';
      }
    }
    
    // Form submission
    couponForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const data = Object.fromEntries(formData);
      
      fetch('/admin/coupon/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire('Success!', data.message, 'success').then(() => {
            modal.style.display = 'none';
            location.reload();
          });
        } else {
          Swal.fire('Failed!', data.message, 'error');
        }
      })
      .catch(error => {
        Swal.fire('Error!', 'An error occurred while adding the coupon.', 'error');
        console.error('Error:', error);
      });
    });
    
    // Action buttons event delegation
    document.addEventListener('click', function(e) {
      if (e.target.matches('.activate-btn, .deactivate-btn')) {
        const button = e.target;
        const couponId = button.getAttribute('data-id');
        const isActivate = button.classList.contains('activate-btn');
        
        Swal.fire({
          title: isActivate ? 'Activate Coupon?' : 'Deactivate Coupon?',
          text: isActivate 
            ? 'This coupon will be available for use.' 
            : 'This coupon will no longer be available for use.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: isActivate ? '#28a745' : '#d33',
          cancelButtonColor: '#3085d6',
          confirmButtonText: isActivate ? 'Yes, activate it' : 'Yes, deactivate it',
          reverseButtons: true
        }).then(result => {
          if (result.isConfirmed) {
            const action = isActivate ? 'activate' : 'deactivate';
            fetch(`/admin/coupon/${action}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ id: couponId })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire('Success!', data.message, 'success').then(() => {
                  location.reload();
                });
              } else {
                Swal.fire('Failed!', data.message, 'error');
              }
            });
          }
        });
      }
      
      if (e.target.matches('.delete-btn')) {
        const button = e.target;
        const couponId = button.getAttribute('data-id');
        
        Swal.fire({
          title: 'Delete Coupon?',
          text: "This action cannot be undone!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#d33',
          cancelButtonColor: '#3085d6',
          confirmButtonText: 'Yes, delete it!',
          reverseButtons: true
        }).then(result => {
          if (result.isConfirmed) {
            fetch('/admin/coupon/delete', {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ id: couponId })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire('Deleted!', data.message, 'success').then(() => {
                  location.reload();
                });
              } else {
                Swal.fire('Failed!', data.message, 'error');
              }
            });
          }
        });
      }
    });
  </script>
</body>
</html>