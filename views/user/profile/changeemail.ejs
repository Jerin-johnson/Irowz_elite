<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Forgot Password - Email Verification</title>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    /* Existing styles (unchanged) */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }
    body {
        font-family: Arial, sans-serif;
        background: linear-gradient(to bottom, #d3d3d3, #ffffff);
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        padding: 10px;
    }
    .container {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        width: 100%;
        max-width: 350px;
    }
    h2 {
        color: #333333;
        font-size: 1.25rem;
        margin-bottom: 1.25rem;
        font-weight: bold;
    }
    .input-group {
        margin-bottom: 1.25rem;
    }
    input[type="email"] {
        width: 100%;
        padding: 0.625rem;
        border: 1px solid #cccccc;
        border-radius: 4px;
        font-size: 1rem;
    }
    input[type="email"]::placeholder {
        color: #aaaaaa;
    }
    .verify-btn {
        background-color: #007bff;
        color: #ffffff;
        padding: 0.625rem;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        width: 100%;
        transition: background-color 0.3s;
    }
    .verify-btn:hover {
        background-color: #0056b3;
    }
    .signup-link {
        margin-top: 0.9375rem;
        font-size: 0.875rem;
        color: #666666;
    }
    .signup-link a {
        color: #007bff;
        text-decoration: none;
    }
    .signup-link a:hover {
        text-decoration: underline;
    }

    @media (max-width: 480px) {
        .container {
            padding: 15px;
            max-width: 90%;
        }
        h2 {
            font-size: 1.1rem;
            margin-bottom: 1rem;
        }
        input[type="email"] {
            padding: 0.5rem;
            font-size: 0.9rem;
        }
        .verify-btn {
            padding: 0.5rem;
            font-size: 0.9rem;
        }
        .signup-link {
            font-size: 0.8rem;
        }
    }
    @media (max-width: 360px) {
        .container {
            padding: 10px;
        }
        h2 {
            font-size: 1rem;
        }
        input[type="email"] {
            font-size: 0.85rem;
        }
        .verify-btn {
            font-size: 0.85rem;
        }
        .signup-link {
            font-size: 0.75rem;
        }
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Change Email</h2>
    <div class="input-group">
      <input type="email" id="email" placeholder="Email" />
    </div>
    <button class="verify-btn" id="verifyBtn" onclick="sendEmail()">Update</button>
    <div class="signup-link">
      Don't have an account? <a href="/signup">Sign up</a>
    </div>
  </div>

  <script>
    async function sendEmail() {
      const emailInput = document.getElementById('email');
      const email = emailInput.value.trim();
      const verifyBtn = document.getElementById('verifyBtn');

      if (!email) {
        return Swal.fire({
          title: 'Error!',
          text: 'Please enter your email.',
          icon: 'error',
          confirmButtonColor: '#007bff'
        });
      }

      const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailPattern.test(email)) {
        return Swal.fire({
          title: 'Invalid Email!',
          text: 'Please enter a valid email address.',
          icon: 'warning',
          confirmButtonColor: '#007bff'
        });
      }

      // UI feedback
      verifyBtn.disabled = true;
      const originalText = verifyBtn.textContent;
      verifyBtn.textContent = 'Updating Email...';

      try {
        const response = await fetch('/profile/email/update', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ email })
        });

        const result = await response.json();

        if (!response.ok) {
          throw new Error(result.message || 'Failed to send OTP.');
        }

        Swal.fire({
          title: 'Success!',
          text: 'Email updatedated successfully redirecting to profile...',
          icon: 'success',
          confirmButtonColor: '#007bff',
          timer: 2000,
          timerProgressBar: true,
          willClose: () => {
            window.location.href = '/profile';
          }
        });
      } catch (err) {
        Swal.fire({
          title: 'Error!',
          text: err.message || 'Something went wrong. Please try again.',
          icon: 'error',
          confirmButtonColor: '#007bff'
        });
        verifyBtn.disabled = false;
        verifyBtn.textContent = originalText;
      }
    }
  </script>
</body>
</html>
