<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password | Irowz Elite</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn-uicons.flaticon.com/uicons-regular-straight/css/uicons-regular-straight.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <%- include('../../partials/userprofile/style') %>
    <style>
        .password-strength {
            margin-top: 5px;
            height: 5px;
            border-radius: 3px;
            background-color: #e9ecef;
            overflow: hidden;
        }
        
        .password-strength-meter {
            height: 100%;
            border-radius: 3px;
            transition: width 0.3s ease;
        }
        
        .password-strength-text {
            font-size: 12px;
            margin-top: 5px;
        }
        
        .password-requirements {
            margin-top: 15px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 4px;
        }
        
        .password-requirements ul {
            padding-left: 20px;
            margin: 0;
        }
        
        .password-requirements li {
            margin-bottom: 5px;
            font-size: 14px;
            color: #666;
        }
        
        .password-requirements li.valid {
            color: #28a745;
        }
        
        .password-requirements li.valid::before {
            content: "✓ ";
            color: #28a745;
        }
        
        .password-requirements li.invalid::before {
            content: "✗ ";
            color: #dc3545;
        }
        
        .password-toggle {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #666;
        }
    </style>
</head>
<body>
    <%- include('../../partials/userprofile/header') %>
    
    <div class="container">
        <div class="row" style="display: flex; gap: 20px;">
            <!-- Sidebar -->
            <div class="col-md-3 sidebar" style="flex: 0 0 250px;">
               <%- include('../../partials/userprofile/sidebar') %>
            </div>
            
            <!-- Main Content -->
            <div class="col-md-9 main-content" style="flex: 1; padding: 30px;">
                <!-- Breadcrumbs -->
                <%- include('../../partials/userprofile/breadcrump', { currentPage: 'change-password' }) %>

                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
                    <h2 style="margin: 0; color: #333;">Change Password</h2>
                    <a href="/profile" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Dashboard
                    </a>
                </div>

                <div class="form-container" style="max-width: 600px; margin: 0 auto;">
                    <form id="changePasswordForm">
                        <div style="margin-bottom: 20px; position: relative;">
                            <label for="currentPassword" class="form-label">Current Password *</label>
                            <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                            <button type="button" class="password-toggle" onclick="togglePasswordVisibility('currentPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>

                        <div style="margin-bottom: 10px; position: relative;">
                            <label for="newPassword" class="form-label">New Password *</label>
                            <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                            <button type="button" class="password-toggle" onclick="togglePasswordVisibility('newPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                            <div class="password-strength">
                                <div class="password-strength-meter" id="passwordStrengthMeter"></div>
                            </div>
                            <div class="password-strength-text" id="passwordStrengthText">Password strength: Too weak</div>
                        </div>

                        <div class="password-requirements">
                            <h5 style="margin-top: 0; margin-bottom: 10px; font-size: 14px;">Password Requirements:</h5>
                            <ul id="passwordRequirements">
                                <li id="lengthReq">At least 8 characters</li>
                                <li id="uppercaseReq">At least one uppercase letter</li>
                                <li id="lowercaseReq">At least one lowercase letter</li>
                                <li id="numberReq">At least one number</li>
                                <li id="specialReq">At least one special character</li>
                            </ul>
                        </div>

                        <div style="margin-bottom: 30px; position: relative;">
                            <label for="confirmPassword" class="form-label">Confirm New Password *</label>
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                            <button type="button" class="password-toggle" onclick="togglePasswordVisibility('confirmPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>

                        <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                            <i class="fas fa-lock"></i> Update Password
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

   <%- include('../../partials/userprofile/footer') %>

   <script>
    // Toggle password visibility
    function togglePasswordVisibility(inputId) {
        const input = document.getElementById(inputId);
        const icon = event.currentTarget.querySelector('i');

        if (input.type === 'password') {
            input.type = 'text';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            input.type = 'password';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    }

    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    const currentPassword = document.getElementById('currentPassword');
    const passwordStrengthMeter = document.getElementById('passwordStrengthMeter');
    const passwordStrengthText = document.getElementById('passwordStrengthText');
    const submitBtn = document.getElementById('submitBtn');

    const lengthReq = document.getElementById('lengthReq');
    const uppercaseReq = document.getElementById('uppercaseReq');
    const lowercaseReq = document.getElementById('lowercaseReq');
    const numberReq = document.getElementById('numberReq');
    const specialReq = document.getElementById('specialReq');

    newPassword.addEventListener('input', checkPasswordStrength);
    confirmPassword.addEventListener('input', validateForm);

    function checkPasswordStrength() {
        const password = newPassword.value;
        let strength = 0;
        let validCount = 0;

        const checks = [
            [password.length >= 8, lengthReq],
            [/[A-Z]/.test(password), uppercaseReq],
            [/[a-z]/.test(password), lowercaseReq],
            [/[0-9]/.test(password), numberReq],
            [/[^A-Za-z0-9]/.test(password), specialReq]
        ];

        for (const [valid, el] of checks) {
            if (valid) {
                el.classList.add('valid');
                validCount++;
            } else {
                el.classList.remove('valid');
            }
        }

        strength = validCount * 20;
        passwordStrengthMeter.style.width = strength + '%';

        if (strength < 40) {
            passwordStrengthMeter.style.backgroundColor = '#dc3545';
            passwordStrengthText.textContent = 'Password strength: Too weak';
            passwordStrengthText.style.color = '#dc3545';
        } else if (strength < 60) {
            passwordStrengthMeter.style.backgroundColor = '#ffc107';
            passwordStrengthText.textContent = 'Password strength: Medium';
            passwordStrengthText.style.color = '#ffc107';
        } else if (strength < 100) {
            passwordStrengthMeter.style.backgroundColor = '#28a745';
            passwordStrengthText.textContent = 'Password strength: Strong';
            passwordStrengthText.style.color = '#28a745';
        } else {
            passwordStrengthMeter.style.backgroundColor = '#28a745';
            passwordStrengthText.textContent = 'Password strength: Very strong';
            passwordStrengthText.style.color = '#28a745';
        }

        validateForm();
    }

    function validateForm() {
        const password = newPassword.value;
        const confirmPwd = confirmPassword.value;
        const currentPwd = currentPassword.value;

        const meetsRequirements =
            password.length >= 8 &&
            /[A-Z]/.test(password) &&
            /[a-z]/.test(password) &&
            /[0-9]/.test(password) &&
            /[^A-Za-z0-9]/.test(password);

        const passwordsMatch = password === confirmPwd;

        submitBtn.disabled = !(meetsRequirements && passwordsMatch && currentPwd);

        confirmPassword.style.borderColor = confirmPwd && !passwordsMatch ? '#dc3545' : '';
    }

    document.getElementById('changePasswordForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        const payload = {
            currentPassword: currentPassword.value,
            newPassword: newPassword.value,
            confirmPassword: confirmPassword.value,
        };

        try {
            const response = await fetch('/profile/password/edit', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload)
            });

            const result = await response.json();

            if (response.ok) {
                swal({
                    title: "Password Updated!",
                    text: result.message || "Your password has been changed successfully.",
                    icon: "success",
                    button: "Continue",
                }).then(() => {
                    window.location.href = '/profile';
                });
            } else {
                swal("Error", result.message || "Something went wrong. Please try again.", "error");
            }
        } catch (error) {
            swal("Error", "Server error. Please try again later.", "error");
        }
    });

    // Logout confirm
    function confirmLogout(event) {
        event.preventDefault();
        swal({
            title: "Are you sure?",
            text: "You will be logged out of your account.",
            icon: "warning",
            buttons: {
                cancel: { text: "Cancel", visible: true },
                confirm: { text: "Logout", visible: true }
            },
            dangerMode: true,
        }).then((willLogout) => {
            if (willLogout) window.location.href = '/logout';
        });
    }

    document.querySelector('.canvas__open').addEventListener('click', () => {
        document.querySelector('.header__menu').classList.toggle('active');
    });
</script>


</body>
</html>
