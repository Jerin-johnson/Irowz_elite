<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Verify OTP</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <style>
    body { background-color: #f8f9fa; }
    .otp-container {
      max-width: 450px;
      margin: 80px auto;
      padding: 30px;
      background-color: #fff;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    .timer {
      font-weight: bold;
      color: #dc3545;
      font-size: 1rem;
    }
    .resend-disabled {
      pointer-events: none;
      opacity: 0.5;
    }
    .error-msg {
      color: #dc3545;
      text-align: center;
      font-size: 0.95rem;
      margin-top: -12px;
      margin-bottom: 12px;
      display: none;
    }
  </style>
</head>
<body>

<div class="container">
  <div class="otp-container">
    <h4 class="mb-4 text-center">Email Verification</h4>
    <p class="text-muted text-center">Enter the 6-digit OTP sent to your email.</p>
    <p id="error" class="error-msg">Invalid OTP. Please try again.</p>

    <form id="check" novalidate>
      <div class="mb-3">
        <label for="otp" class="form-label">OTP</label>
        <input type="text" class="form-control" id="otp" maxlength="6">
      </div>
      <button type="submit" id="submitBtn" class="btn btn-primary w-100">Verify OTP</button>
    </form>

    <div class="mt-3 text-center">
      <span class="timer" id="countdown">01:00</span>
    </div>

    <div class="mt-3 text-center">
      <button type="button" id="resendBtn" class="btn btn-link resend-disabled" disabled>Resend OTP</button>
    </div>
  </div>
</div>

<script>
  const display = document.getElementById('countdown');
  const resendBtn = document.getElementById('resendBtn');
  const submitBtn = document.getElementById('submitBtn');
  const form = document.getElementById('check');
  const errorMsg = document.getElementById('error');
  const otpInput = document.getElementById('otp');

  let countdown;

  // Start the countdown timer
  function startTimer(remaining) {-
    clearInterval(countdown); // Clear previous timer
    countdown = setInterval(() => {
      const minutes = Math.floor(remaining / 60);
      const seconds = remaining % 60;
      display.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

      if (--remaining < 0) {
        clearInterval(countdown);
        display.textContent = 'OTP expired';
        resendBtn.disabled = false;
        resendBtn.classList.remove('resend-disabled');
        localStorage.removeItem('otpStart'); // clear expired timestamp
      }
    }, 1000);
  }

  // Load timer state on page load
  window.addEventListener('DOMContentLoaded', () => {
    const savedTime = localStorage.getItem('otpStart');
    const now = Date.now();

    if (savedTime) {
      const elapsed = Math.floor((now - parseInt(savedTime)) / 1000);
      const remaining = 60 - elapsed;

      if (remaining > 0) {
        resendBtn.disabled = true;
        resendBtn.classList.add('resend-disabled');
        startTimer(remaining);
      } else {
        display.textContent = 'OTP expired';
        resendBtn.disabled = false;
        resendBtn.classList.remove('resend-disabled');
        localStorage.removeItem('otpStart');
      }
    } else {
      localStorage.setItem('otpStart', now.toString());
      resendBtn.disabled = true;
      resendBtn.classList.add('resend-disabled');
      startTimer(60);
    }
  });

  // OTP form submit
  form.addEventListener('submit', async function (e) {
    e.preventDefault();
    errorMsg.style.display = 'none';

    const otpValue = otpInput.value.trim();
    if (!/^\d{6}$/.test(otpValue)) {
      errorMsg.textContent = 'Enter a valid 6-digit number.';
      errorMsg.style.display = 'block';
      return;
    }

    submitBtn.disabled = true;
    submitBtn.textContent = 'Verifying...';

    try {
      const res = await fetch('/otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ otp: otpValue })
      });

      const data = await res.json();

      if (data.success) {
        window.location.href = '/'; // Redirect on success
      } else {
        errorMsg.textContent = data.message || 'Invalid OTP.';
        errorMsg.style.display = 'block';
      }
    } catch (err) {
      errorMsg.textContent = 'Something went wrong. Please try again.';
      errorMsg.style.display = 'block';
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Verify OTP';
    }
  });

  // Resend OTP
  resendBtn.addEventListener('click', async () => {
    resendBtn.textContent = 'Resending...';
    resendBtn.disabled = true;

    try {
      const res = await fetch('/resend-otp', { method: 'POST' });
      const data = await res.json();

      if (data.success) {
        Swal.fire({
          icon: 'success',
          title: 'OTP resent successfully',
          text: data.message || 'Welcome to the platform!',
        });

        otpInput.value = '';
        localStorage.setItem('otpStart', Date.now().toString()); // Reset timer reference
        resendBtn.disabled = true;
        resendBtn.classList.add('resend-disabled');
        startTimer(60);
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.message || 'An error occurred while resending OTP',
        });
      }
    } catch (err) {
      alert('Error resending OTP.');
    } finally {
      resendBtn.textContent = 'Resend OTP';
    }
  });
</script>

</body>
</html>

