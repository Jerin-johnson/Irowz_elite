<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wallet | Irowz Elite</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn-uicons.flaticon.com/uicons-regular-straight/css/uicons-regular-straight.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <%- include('../../partials/userprofile/style') %>
    <style>
        .wallet-balance-card {
            background: linear-gradient(135deg, #b4883e 0%, #8e6b2f 100%);
            color: white;
            border-radius: 12px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(180, 136, 62, 0.3);
        }
        
        .balance-amount {
            font-size: 36px;
            font-weight: 700;
            margin: 10px 0;
        }
        
        .wallet-actions {
            display: flex;
            gap: 15px;
            margin-top: 20px;
            flex-wrap: wrap;
        }
        
        .wallet-action-btn {
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            padding: 10px 20px;
            border-radius: 6px;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        
        .wallet-action-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            color: white;
        }
        
        .transaction-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .transaction-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid #e9ecef;
        }
        
        .transaction-item:last-child {
            border-bottom: none;
        }
        
        .transaction-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .transaction-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }
        
        .transaction-icon.credit {
            background: #28a745;
        }
        
        .transaction-icon.debit {
            background: #dc3545;
        }
        
        .transaction-details h4 {
            margin: 0 0 5px;
            color: #333;
        }
        
        .transaction-details p {
            margin: 0;
            color: #666;
            font-size: 14px;
        }
        
        .transaction-amount {
            text-align: right;
        }
        
        .amount {
            font-weight: 700;
            font-size: 16px;
        }
        
        .amount.credit {
            color: #28a745;
        }
        
        .amount.debit {
            color: #dc3545;
        }
        
        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .quick-action-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            text-align: center;
            transition: transform 0.3s ease;
            cursor: pointer;
        }
        
        .quick-action-card:hover {
            transform: translateY(-5px);
        }
        
        .quick-action-card i {
            font-size: 32px;
            color: #b4883e;
            margin-bottom: 15px;
        }
        
        .quick-action-card h3 {
            margin: 0 0 10px;
            color: #333;
        }
        
        .quick-action-card p {
            margin: 0;
            color: #666;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <%- include('../../partials/userprofile/header') %>
    
    <div class="container">
        <div class="row" style="display: flex; gap: 20px;">
            <!-- Sidebar -->
            <div class="col-md-3 sidebar" style="flex: 0 0 250px;">
                <%- include('../../partials/userprofile/sidebar') %>
            </div>
            
            <!-- Main Content -->
            <div class="col-md-9 main-content" style="flex: 1; padding: 30px;">
                <!-- Breadcrumbs -->
                <%- include('../../partials/userprofile/breadcrump', { currentPage: 'wallet' }) %>

                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
                    <h2 style="margin: 0; color: #333;">My Wallet</h2>
                </div>

                <!-- Wallet Balance Card -->
                <div class="wallet-balance-card">
                    <h3 style="margin: 0; opacity: 0.9;">Available Balance</h3>
                    <div class="balance-amount" id="walletBalance">$<%= walletData.balance %></div>
                    <p style="margin: 0; opacity: 0.8;">Last updated: <%= walletData.lastUpdated %></p>
                    
                    <div class="wallet-actions">
                        <a href="#" class="wallet-action-btn" onclick="addMoney()">
                            <i class="fas fa-plus"></i> Add Money
                        </a>
                        <a href="#" class="wallet-action-btn" onclick="withdrawMoney()">
                            <i class="fas fa-minus"></i> Withdraw
                        </a>
                        <a href="#" class="wallet-action-btn" onclick="transferMoney()">
                            <i class="fas fa-exchange-alt"></i> Transfer
                        </a>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="quick-actions">
                    <div class="quick-action-card" onclick="addMoney()">
                        <i class="fas fa-credit-card"></i>
                        <h3>Add Money</h3>
                        <p>Add funds to your wallet from your bank account or card</p>
                    </div>
                    
                    <div class="quick-action-card" onclick="payBills()">
                        <i class="fas fa-file-invoice-dollar"></i>
                        <h3>Pay Bills</h3>
                        <p>Pay your utility bills and other expenses</p>
                    </div>
                    
                    <div class="quick-action-card" onclick="sendMoney()">
                        <i class="fas fa-paper-plane"></i>
                        <h3>Send Money</h3>
                        <p>Transfer money to friends and family</p>
                    </div>
                    
                    <div class="quick-action-card" onclick="viewOffers()">
                        <i class="fas fa-gift"></i>
                        <h3>Cashback Offers</h3>
                        <p>Explore exclusive cashback and reward offers</p>
                    </div>
                </div>

                <!-- Recent Transactions -->
                <div class="transaction-card">
                    <h3 style="margin: 0 0 20px; color: #333;">Recent Transactions</h3>
                    <% if (walletData.transactions.length) { %>
                        <% walletData.transactions.forEach(tx => { %>
                            <div class="transaction-item">
                                <div class="transaction-info">
                                    <div class="transaction-icon <%= tx.type %>">
                                        <i class="fas fa-<%= tx.icon %>"></i>
                                    </div>
                                    <div class="transaction-details">
                                        <h4><%= tx.reason %></h4>
                                        <p><%= tx.orderId ? `Order #${tx.orderId}` : 'Wallet Transaction' %></p>
                                        <p><%= tx.date %></p>
                                    </div>
                                </div>
                                <div class="transaction-amount">
                                    <div class="amount <%= tx.type %>"><%= tx.type === 'credit' ? '+' : '-' %>$<%= tx.amount %></div>
                                </div>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <p>No transactions found.</p>
                    <% } %>
                </div>

                <!-- View All Transactions -->
                <div style="text-align: center; margin-top: 20px;">
                    <a href="/wallet/transactions" class="btn btn-outline-primary">
                        <i class="fas fa-list"></i> View All Transactions
                    </a>
                </div>
            </div>
        </div>
    </div>

    <%- include('../../partials/userprofile/footer') %>

    <script>
        function addMoney() {
            swal({
                title: "Add Money to Wallet",
                text: "Enter the amount you want to add:",
                content: {
                    element: "input",
                    attributes: {
                        placeholder: "Enter amount (e.g., 100)",
                        type: "number",
                        min: "10",
                        max: "5000"
                    },
                },
                buttons: {
                    cancel: "Cancel",
                    confirm: "Add Money"
                }
            }).then(async (amount) => {
                if (amount && amount >= 10 && amount <= 5000) {
                    try {
                        const response = await fetch("/wallet/add", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                                "Accept": "application/json",
                            },
                            body: JSON.stringify({ amount }),
                        });

                        if (response.redirected) {
                            if (response.url.includes("/login")) {
                                await swal({
                                    title: "Session Expired",
                                    text: "Please log in to continue",
                                    icon: "warning",
                                    button: "OK",
                                });
                                window.location.href = "/login";
                                return;
                            }
                            throw new Error("Unexpected redirect");
                        }

                        const result = await response.json();
                        if (response.ok) {
                            await swal({
                                title: "Money Added!",
                                text: result.message,
                                icon: "success",
                                button: "OK",
                            });
                            window.location.reload();
                        } else {
                            await swal({
                                title: "Error",
                                text: result.message || "Failed to add money",
                                icon: "error",
                                button: "OK",
                            });
                        }
                    } catch (error) {
                        await swal({
                            title: "Error",
                            text: error.message || "Server error. Please try again later.",
                            icon: "error",
                            button: "OK",
                        });
                    }
                } else if (amount) {
                    await swal({
                        title: "Invalid Amount",
                        text: "Amount must be between $10 and $5000",
                        icon: "error",
                        button: "OK",
                    });
                }
            });
        }

        function withdrawMoney() {
            const walletBalance = parseFloat(document.getElementById('walletBalance').textContent.replace('$', ''));
            swal({
                title: "Withdraw Money",
                text: "Enter the amount you want to withdraw:",
                content: {
                    element: "input",
                    attributes: {
                        placeholder: "Enter amount (e.g., 50)",
                        type: "number",
                        min: "10",
                        max: walletBalance.toString(),
                    },
                },
                buttons: {
                    cancel: "Cancel",
                    confirm: "Withdraw"
                }
            }).then(async (amount) => {
                if (amount && amount >= 10 && amount <= walletBalance) {
                    try {
                        const response = await fetch("/wallet/withdraw", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                                "Accept": "application/json",
                            },
                            body: JSON.stringify({ amount }),
                        });

                        if (response.redirected) {
                            if (response.url.includes("/login")) {
                                await swal({
                                    title: "Session Expired",
                                    text: "Please log in to continue",
                                    icon: "warning",
                                    button: "OK",
                                });
                                window.location.href = "/login";
                                return;
                            }
                            throw new Error("Unexpected redirect");
                        }

                        const result = await response.json();
                        if (response.ok) {
                            await swal({
                                title: "Withdrawal Initiated!",
                                text: result.message,
                                icon: "success",
                                button: "OK",
                            });
                            window.location.reload();
                        } else {
                            await swal({
                                title: "Error",
                                text: result.message || "Failed to withdraw money",
                                icon: "error",
                                button: "OK",
                            });
                        }
                    } catch (error) {
                        await swal({
                            title: "Error",
                            text: error.message || "Server error. Please try again later.",
                            icon: "error",
                            button: "OK",
                        });
                    }
                } else if (amount) {
                    await swal({
                        title: "Invalid Amount",
                        text: `Amount must be between $10 and $${walletBalance.toFixed(2)}`,
                        icon: "error",
                        button: "OK",
                    });
                }
            });
        }
        
        function transferMoney() {
            swal("Transfer Money", "This feature will be available soon. You'll be able to transfer money to other users.", "info");
        }
        
        function payBills() {
            swal("Pay Bills", "Bill payment feature coming soon! You'll be able to pay utility bills directly from your wallet.", "info");
        }
        
        function sendMoney() {
            swal("Send Money", "Money transfer feature will be available soon. Send money to friends and family instantly.", "info");
        }
        
        function viewOffers() {
            window.location.href = '/coupons';
        }

        function confirmLogout(event) {
            event.preventDefault();
            swal({
                title: "Are you sure?",
                text: "You will be logged out of your account.",
                icon: "warning",
                buttons: {
                    cancel: {
                        text: "Cancel",
                        value: null,
                        visible: true,
                        className: "",
                        closeModal: true,
                    },
                    confirm: {
                        text: "Logout",
                        value: true,
                        visible: true,
                        className: "",
                        closeModal: true
                    }
                },
                dangerMode: true,
            })
            .then((willLogout) => {
                if (willLogout) {
                    window.location.href = '/logout';
                }
            });
        }

        // Mobile Menu Toggle
        document.querySelector('.canvas__open').addEventListener('click', () => {
            document.querySelector('.header__menu').classList.toggle('active');
        });
    </script>
</body>
</html>