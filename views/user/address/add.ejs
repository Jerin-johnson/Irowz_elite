<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Add New Address - My Account | Irowz Elite</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn-uicons.flaticon.com/uicons-regular-straight/css/uicons-regular-straight.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <%- include('../../partials/userprofile/style') %>
    <style>
        /* Error styling only */
        .error-border {
            border-color: #dc3545 !important;
            box-shadow: 0 0 0 2px rgba(220, 53, 69, 0.25) !important;
        }
        .error-message {
            color: #dc3545;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }
    </style>
</head>
<body>
    <%- include('../../partials/userprofile/header') %>
    
    <div class="container">
        <div class="row" style="display: flex; gap: 20px;">
            <!-- Sidebar -->
            <div class="col-md-3 sidebar" style="flex: 0 0 250px;">
                <%- include('../../partials/userprofile/sidebar') %>
            </div>
            
            <!-- Main Content -->
            <div class="col-md-9 main-content" style="flex: 1; padding: 30px;">
                <!-- Breadcrumbs -->
                <%- include('../../partials/userprofile/breadcrump', { currentPage: 'add-address' }) %>

                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
                    <h2 style="margin: 0; color: #333;">Add New Address</h2>
                    <a href="/address" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Address Book
                    </a>
                </div>

                <form id="addAddressForm" novalidate>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
                        <!-- Personal Information -->
                        <div>
                            <label for="firstName" class="form-label">First Name </label>
                            <input type="text" class="form-control" id="firstName" name="firstName" required autocomplete="given-name" />
                            <div class="error-message" id="firstName-error"></div>
                        </div>
                        <div>
                            <label for="lastName" class="form-label">Last Name </label>
                            <input type="text" class="form-control" id="lastName" name="lastName" required autocomplete="family-name" />
                            <div class="error-message" id="lastName-error"></div>
                        </div>
                    </div>

                    <div style="margin-bottom: 20px;">
                        <label for="phone" class="form-label">Phone Number *</label>
                        <input type="tel" class="form-control" id="phone" name="phone" required autocomplete="tel" />
                        <div class="error-message" id="phone-error"></div>
                    </div>

                    <!-- Address Information -->
                    <h5 style="margin: 30px 0 20px; color: #333;">Address Information</h5>
                    
                    <div style="margin-bottom: 20px;">
                        <label for="addressLine1" class="form-label">Address</label>
                        <input
                            type="text"
                            class="form-control"
                            id="addressLine1"
                            name="address"
                            placeholder="House number, street name"
                            required
                            autocomplete="address-line1"
                        />
                        <div class="error-message" id="addressLine1-error"></div>
                    </div>

                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
                        <div>
                            <label for="city" class="form-label">City </label>
                            <input type="text" class="form-control" id="city" name="city" required autocomplete="address-level2" />
                            <div class="error-message" id="city-error"></div>
                        </div>
                        <div>
                            <label for="state" class="form-label">State/Province </label>
                            <select class="form-select" id="state" name="state" required autocomplete="address-level1">
                                <option value="">Select State</option>
                                <option value="Kerala">Kerala</option>
                                <option value="Tamil Nadu">Tamil Nadu</option>
                                <option value="Karnataka">Karnataka</option>
                            </select>
                            <div class="error-message" id="state-error"></div>
                        </div>
                    </div>

                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
                        <div>
                            <label for="zipCode" class="form-label">ZIP/Postal Code </label>
                            <input type="text" class="form-control" id="zipCode" name="pincode" required autocomplete="postal-code" />
                            <div class="error-message" id="zipCode-error"></div>
                        </div>
                        <div>
                            <label for="country" class="form-label">Country </label>
                            <select class="form-select" id="country" name="country" required autocomplete="country">
                                <option value="">Select Country</option>
                                <option value="india" selected>India</option>
                            </select>
                            <div class="error-message" id="country-error"></div>
                        </div>
                    </div>

                    <input type="hidden" id="redirectpage" value=<%=redirectpage %>>
                    <!-- Address Type -->
                    <h5 style="margin: 30px 0 20px;">Address Type</h5>
                    <div style="margin-bottom: 20px;">
                        <div class="form-check form-check-inline">
                            <input
                                class="form-check-input"
                                type="radio"
                                name="addressType"
                                id="home"
                                value="home"
                                checked
                            />
                            <label class="form-check-label" for="home">
                                <i class="fas fa-home"></i> Home
                            </label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input
                                class="form-check-input"
                                type="radio"
                                name="addressType"
                                id="work"
                                value="work"
                            />
                            <label class="form-check-label" for="work">
                                <i class="fas fa-building"></i> Work
                            </label>
                        </div>
                        <div class="error-message" id="addressType-error"></div>
                    </div>

                    <!-- Default Address -->
                    <div style="margin-bottom: 30px;">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="isDefault" name="isDefault" value="1" />
                            <label class="form-check-label" for="isDefault">Set as default address</label>
                        </div>
                    </div>

                    <!-- Submit Buttons -->
                    <div style="display: flex; gap: 15px;">
                        <button type="submit" class="btn btn-primary" id="submitBtn">
                            <i class="fas fa-save"></i> Save Address
                        </button>
                        <a href="/address" class="btn btn-outline-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <%- include('../../partials/userprofile/footer') %>

    <script>
    // Utility functions for validation
    function showError(fieldId, message) {
        const field = document.getElementById(fieldId);
        const errorDiv = document.getElementById(fieldId + '-error');
        if (field) field.classList.add('error-border');
        if (errorDiv) {
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
        }
    }

    function clearError(fieldId) {
        const field = document.getElementById(fieldId);
        const errorDiv = document.getElementById(fieldId + '-error');
        if (field) field.classList.remove('error-border');
        if (errorDiv) errorDiv.style.display = 'none';
    }

    function clearAllErrors() {
        document.querySelectorAll('.error-message').forEach(el => (el.style.display = 'none'));
        document.querySelectorAll('.form-control, .form-select').forEach(el => el.classList.remove('error-border'));
    }

    function validateField(fieldId, value, regex, errorMessage) {
        if (!value.trim()) {
            showError(fieldId, `${capitalize(fieldId)} is required.`);
            return false;
        } else if (regex && !regex.test(value.trim())) {
            showError(fieldId, errorMessage);
            return false;
        }
        clearError(fieldId);
        return true;
    }

    function capitalize(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
    }

    document.getElementById('addAddressForm').addEventListener('submit', async function (e) {
        e.preventDefault();
        clearAllErrors();

        let isValid = true;

        // Updated phone regex: removed +91
        const nameRegex = /^[A-Za-z\s]{2,50}$/;
        const phoneRegex = /^[6-9]\d{9}$/;
        const addressRegex = /^[A-Za-z0-9\s,.\-]{5,100}$/;
        const cityRegex = /^[A-Za-z\s]{2,50}$/;
        const zipRegex = /^\d{6}$/;

        const firstName = document.getElementById('firstName').value;
        const lastName = document.getElementById('lastName').value;
        const phone = document.getElementById('phone').value;
        const address = document.getElementById('addressLine1').value;
        const city = document.getElementById('city').value;
        const state = document.getElementById('state').value;
        const zipCode = document.getElementById('zipCode').value;
        const country = document.getElementById('country').value;

        if (!validateField('firstName', firstName, nameRegex, 'First Name must be 2-50 characters long and contain only letters and spaces.')) isValid = false;
        if (!validateField('lastName', lastName, nameRegex, 'Last Name must be 2-50 characters long and contain only letters and spaces.')) isValid = false;
        if (!validateField('phone', phone, phoneRegex, 'Phone Number must be a valid 10-digit Indian number.')) isValid = false;
        if (!validateField('addressLine1', address, addressRegex, 'Address must be 5-100 characters long and contain only letters, numbers, spaces, commas, periods, or hyphens.')) isValid = false;
        if (!validateField('city', city, cityRegex, 'City must be 2-50 characters long and contain only letters and spaces.')) isValid = false;
        if (!state) {
            showError('state', 'State is required.');
            isValid = false;
        }
        if (!validateField('zipCode', zipCode, zipRegex, 'ZIP/Postal Code must be exactly 6 digits.')) isValid = false;
        if (!country) {
            showError('country', 'Country is required.');
            isValid = false;
        }

        const addressTypes = document.getElementsByName('addressType');
        if (![...addressTypes].some(input => input.checked)) {
            showError('addressType', 'Please select an address type.');
            isValid = false;
        } else {
            clearError('addressType');
        }

        if (!isValid) {
            const firstError = document.querySelector('.error-border');
            if (firstError) firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
            return;
        }

        const submitBtn = document.getElementById('submitBtn');
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving...';
        const redirectpage = document.getElementById("redirectpage").value

        try {
            const formData = {
                firstName: firstName.trim(),
                lastName: lastName.trim(),
                phone: phone.trim(),
                address: address.trim(),
                city: city.trim(),
                state: state,
                pincode: zipCode.trim(),
                country: country,
                addressType: document.querySelector('input[name="addressType"]:checked').value,
                isDefault: document.getElementById('isDefault').checked ? 1 : 0
            };

            const response = await fetch(`/address/add?page=${redirectpage}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    Accept: 'application/json'
                },
                body: JSON.stringify(formData)
            });

            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

            const result = await response.json();

            if (result.success) {
                swal("Success", result.message || "Address added successfully!", "success").then(() => {
                    if(redirectpage)
                {
                    window.location.href = `/${redirectpage}`;
                }else{
                    window.location.href='/address'
                }
                });
            } else {
                swal("Error", result.message || "An error occurred while adding the address.", "error");
            }
        } catch (error) {
            console.error('Fetch error:', error);
            swal("Error", "Failed to connect to the server. Please try again later.", "error");
        } finally {
            submitBtn.disabled = false;
            submitBtn.innerHTML = '<i class="fas fa-save"></i> Save Address';
        }
    });

    document.getElementById('phone').addEventListener('input', function (e) {
        let value = e.target.value.replace(/\D/g, '');
        if (value.length > 10) value = value.slice(0, 10);
        e.target.value = value;
    });

    ['firstName', 'lastName', 'phone', 'addressLine1', 'city', 'zipCode'].forEach(fieldId => {
        const el = document.getElementById(fieldId);
        if (el) {
            el.addEventListener('input', () => clearError(fieldId));
        }
    });

    ['state', 'country'].forEach(fieldId => {
        const el = document.getElementById(fieldId);
        if (el) {
            el.addEventListener('change', () => clearError(fieldId));
        }
    });

    document.querySelectorAll('input[name="addressType"]').forEach(radio => {
        radio.addEventListener('change', () => clearError('addressType'));
    });

    function confirmLogout(event) {
        event.preventDefault();
        swal({
            title: "Are you sure?",
            text: "You will be logged out of your account.",
            icon: "warning",
            buttons: {
                cancel: {
                    text: "Cancel",
                    visible: true,
                    closeModal: true
                },
                confirm: {
                    text: "Logout",
                    visible: true,
                    closeModal: true
                }
            },
            dangerMode: true
        }).then(willLogout => {
            if (willLogout) {
                window.location.href = '/logout';
            }
        });
    }
</script>


  
</body>
</html>
